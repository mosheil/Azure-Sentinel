{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"metadata": {
		"comments": "This playbook turns on audit for an Azure SQL database on which an alert had been fired",
		"author": "Hani Neuvirth"
	},
	"parameters": {
		"PlaybookName": {
			"defaultValue": "Turn-on-SQLDB-Audit",
			"type": "string"
		},
		"UserName": {
			"defaultValue": "<username>@<domain>",
			"type": "string"
		},
		"clientId": {
            "defaultValue": "<enter the ClientId of the application>",
            "type": "string"
        },
          "clientSecret": {
            "defaultValue": "<enter the Client secret of the application>",
            "type": "securestring"
        }
	},
	"variables": {
		"ARMConnectionName": "[concat('arm_connection-', parameters('PlaybookName'))]",
		"AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
	},
	"resources": [
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('ARMConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "AppConnection",
				"parameterValues": {
					"token:clientId": "[parameters('clientId')]",
					"token:clientSecret": "[parameters('clientSecret')]",
					"token:TenantId": "[subscription().tenantId]",
					"token:grantType": "client_credentials"
				},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/arm')]"
				}
			}
		},
		{
			"type": "Microsoft.Web/connections",
			"apiVersion": "2016-06-01",
			"name": "[variables('AzureSentinelConnectionName')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"displayName": "[parameters('UserName')]",
				"customParameterValues": {},
				"api": {
					"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
				}
			}
		},
		{
			"type": "Microsoft.Logic/workflows",
			"apiVersion": "2017-07-01",
			"name": "[parameters('PlaybookName')]",
			"location": "[resourceGroup().location]",
			"tags": {
				"LogicAppsCategory": "security"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Web/connections', variables('ARMConnectionName'))]",
				"[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
			],
			"properties": {
				"state": "Enabled",
				"definition": {
					"$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {
						"$connections": {
							"defaultValue": {},
							"type": "Object"
						}
					},
					"triggers": {
						"When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
							"inputs": {
								"body": {
									"callback_url": "@{listCallbackUrl()}"
								},
								"host": {
									"connection": {
										"name": "@parameters('$connections')['azuresentinel']['connectionId']"
									}
								},
								"path": "/subscribe"
							},
							"type": "ApiConnectionWebhook"
						}
					},
					"actions": {
						"For_each": {
							"actions": {
								"Condition": {
									"actions": {
										"Create_or_update_a_resource": {
											"inputs": {
												"body": {
													"properties": "@json('{\r\n  \"retentionDays\": 0,\r\n  \"auditActionsAndGroups\": [\r\n    \"SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\",\r\n    \"FAILED_DATABASE_AUTHENTICATION_GROUP\",\r\n    \"BATCH_COMPLETED_GROUP\"\r\n  ],\r\n  \"isAzureMonitorTargetEnabled\": true,\r\n  \"state\": \"Enabled\",\r\n  \"storageAccountSubscriptionId\": \"00000000-0000-0000-0000-000000000000\"\r\n}')"
												},
												"host": {
													"connection": {
														"name": "@parameters('$connections')['arm']['connectionId']"
													}
												},
												"method": "put",
												"path": "/subscriptions/@{encodeURIComponent(split(body('Parse_JSON')?['ResourceId'],'/')[2])}/resourcegroups/@{encodeURIComponent(split(body('Parse_JSON')?['ResourceId'],'/')[4])}/providers/@{encodeURIComponent('\"MICROSOFT.SQL\"')}/@{encodeURIComponent(concat('/SERVERS/',split(body('Parse_JSON')?['ResourceId'])[8],'/DATABASES/',split(body('Parse_JSON')?['ResourceId'])[10],'/auditingSettings/Default'))}",
												"queries": {
													"x-ms-api-version": "2017-03-01-preview"
												}
											},
											"runAfter": {
												"Parse_JSON": [
													"Succeeded"
												]
											},
											"type": "ApiConnection"
										},
										"Parse_JSON": {
											"inputs": {
												"content": "@items('For_each')",
												"schema": {
													"properties": {
														"$id": {
															"type": "string"
														},
														"ResourceId": {
															"type": "string"
														},
														"Type": {
															"type": "string"
														}
													},
													"type": "object"
												}
											},
											"runAfter": {},
											"type": "ParseJson"
										}
									},
									"expression": {
										"and": [
											{
												"contains": [
													"@items('For_each')",
													"MICROSOFT.SQL"
												]
											}
										]
									},
									"runAfter": {},
									"type": "If"
								}
							},
							"foreach": "@array(triggerBody()?['Entities'])",
							"runAfter": {},
							"type": "Foreach"
						}
					},
					"outputs": {}
				},
				"parameters": {
					"$connections": {
						"value": {
							"arm": {
								"connectionId": "[resourceId('Microsoft.Web/connections', variables('ARMConnectionName'))]",
								"connectionName": "[variables('ARMConnectionName')]",
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/arm')]"
							},
							"azuresentinel": {
								"connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
								"connectionName": "[variables('AzureSentinelConnectionName')]",
								"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
							}
						}
					}
				}
			}
		}
	]
}